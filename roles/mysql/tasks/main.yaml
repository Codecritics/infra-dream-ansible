---
- name: Install Mysql and Python3 MySQL module
  apt:
    name: [  "mysql-server", "python3-pymysql" ]
    state: latest
  become: yes

- name: Removes anonymous MySQL accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  become: yes

- name: Create a new database for the application
  mysql_db:
    name: "{{ mysql_database }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: yes

- name: Create database user for the Apps
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_pass }}"
    priv: "{{ mysql_database }}.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  become: yes

- name: Copy Mysql configuration
  copy:
    src: "{{ role_path }}/files/mysqld.cnf"
    dest: "/etc/mysql/my.cnf"
  become: yes

- name: Restart Mysql service
  service:
    name: mysql
    state: restarted
  become: yes

# TODO DUMP the database
#- name: allow access from this server the old one
#  iptables: chain=INPUT source={{ ansible_default_ipv4["address"] }} jump=ACCEPT comment="Allow access from new {{ ansible_fqdn }}"
#  remote_user: codecritics
#  delegate_to: current_dev
#
#- name: Dump multiple databases
#  community.mysql.mysql_db:
#    state: dump
#    name: wdream
#    login_host:
#    login_password:
#    target: /tmp/dump.sql
#  delegate_to: current-dev

#- name: Restore database
#  mysql_db:
#    name: "{{ mysql_database }}"
#    state: import
#    target: /tmp/todo_dump.sql
#    login_unix_socket: /var/run/mysqld/mysqld.sock